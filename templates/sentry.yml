---
.sentry:
  image: jobtomelabs/sentry-cli-bash:v1.1.0

  script:
    - &check-set-variables |

      # CHECK VARIABLES PHASE

      for var in "SENTRY_AUTH_TOKEN" "SENTRY_URL" "SENTRY_ORG" "SENTRY_PROJECT"; do
        if [ -z "${!var}" ]; then
          echo "Missing '${var}' Variable!"
          exit 1
        fi
      done

      ENVIRONMENT="production"

      if [ -z "${CI_COMMIT_TAG}" ]; then
        CI_COMMIT_TAG=$(git describe --tags --always)
        ENVIRONMENT="quality"
      fi

      sentry-cli info

  only:
    - merge_requests
    - master
    - /^v.+$/i
    - /^qa.+$/i

  when: on_success

  allow_failure: true

.sentry:release:set:
  extends: .sentry

  stage: build

  script:
    - *check-set-variables

    - |

      # SET NEW RELEASE

      sentry-cli releases new "${CI_COMMIT_TAG}"

      if [ -n "${FEAT_SENTRY_SET_COMMITS}" ]; then

        echo
        echo "-> [INFO] Variable 'FEAT_SENTRY_SET_COMMITS' (Experimental Feature) Enabled!"
        echo

        sentry-cli releases set-commits "${CI_COMMIT_TAG}" --auto

      fi

      echo "Sentry Release set to '${CI_COMMIT_TAG}'!"

.sentry:release:finalize:
  extends: .sentry

  stage: deploy

  script:
    - *check-set-variables

    - |

      # FINALIZE RELEASE

      sentry-cli releases finalize "${CI_COMMIT_TAG}"

      echo "Sentry Release finalized to '${CI_COMMIT_TAG}'!"

.sentry:notify:
  extends: .sentry

  stage: notify

  script:
    - *check-set-variables

    - |

      # SET NEW DEPLOY

      sentry-cli releases deploys "${CI_COMMIT_TAG}" new -e "${ENVIRONMENT}"

      echo "Sentry Release '${CI_COMMIT_TAG}' set for '${ENVIRONMENT}'!"
