---
.secrets:
  image: jobtomelabs/helm:v3.8.1

.secrets:deploy:
  extends: .secrets

  stage: deploy

  variables:
    GIT_DEPTH: 1

  script:
    - &checkvars |

      # CHECKING VARIABLES PHASE

      for var in "GOOGLE_KEY" "CLUSTER_ZONE" "CLUSTER_NAME" "NAMESPACE" "PART_OF" "GOOGLE_PROJECT"; do
          if [ -z "${!var}" ]; then
            echo
            echo "-> [WARNING] Missing '${var}' variable!"
            echo
            exit 1
          fi
      done

    - &activate |

      # ACTIVATION PHASE

      echo "${GOOGLE_KEY}" > /tmp/key.json

      gcloud auth activate-service-account --key-file /tmp/key.json

      gcloud config set project "${GOOGLE_PROJECT}"

      echo
      echo "-> Google project '${GOOGLE_PROJECT}' configured!"
      echo

    - &connect |

      # CLUSTER CONNECTION PHASE

      gcloud container clusters get-credentials --zone "${CLUSTER_ZONE}" "${CLUSTER_NAME}"

      kubectl config set-context $(kubectl config current-context) --namespace="${NAMESPACE}"

      echo
      echo "-> Namespace '$(kubectl config view --minify --output jsonpath={..namespace})' configured!"
      echo
      kubectl cluster-info
      echo

    - &environment |

      # CHECK PATHS

      if [ -z "${HELM_DIR}" ]; then
        HELM_DIR=helm
      fi

      if [ -z "${ENVIRONMENT}" ]; then
        ENVIRONMENT=production
      fi

      if [ -d "${HELM_DIR}/${ENVIRONMENT_NAME}" ]; then
        ENVIRONMENT=${ENVIRONMENT_NAME}
      fi

      if [ -d "${HELM_DIR}/${ENVIRONMENT}" ]; then
        echo
        echo "-> Getting manifests from directory '${ENVIRONMENT}'"
        echo
        HELM_FILES_PATH="${HELM_DIR}/${ENVIRONMENT}"
      fi

      if [ -n "${ENVIRONMENT_PATH}" ] && [ "${ENVIRONMENT_PATH}" != "${ENVIRONMENT}" ]; then
          if [ -d "${HELM_DIR}/${ENVIRONMENT_PATH}" ]; then
            echo
            echo "-> Getting manifests from directory '${ENVIRONMENT_PATH}'"
            echo
            HELM_FILES_PATH="${HELM_DIR}/${ENVIRONMENT_PATH}"
          else
            echo
            echo "-> [WARNING] Enviroment directory in '${ENVIRONMENT_PATH}' doesn't exist!"
            echo
          fi
      fi

    - &secrets-apply |

      # SECRETS APPLICATION
      if [ ! -f "${HELM_FILES_PATH}/secrets.yaml" ] && [ -z "${SECRET_YAML}" ]; then
        echo
        echo "-> [WARN] No secret to apply!"
        echo
      else
        touch /tmp/secrets.yaml

        if [ -f "${HELM_FILES_PATH}/secrets.yaml" ]; then
          if [ -z "${SOPS_KEY}" ] || [ -z "${SOPS_CONF}" ]; then
            echo "[WARN] Cannot apply secrets: missing sops key or conf"
          else
            echo "${SOPS_CONF}" > /tmp/.sops.yaml
            echo "${SOPS_KEY}" > /tmp/sops.json
            GOOGLE_APPLICATION_CREDENTIALS=/tmp/sops.json sops --config /tmp/.sops.yaml -d "${HELM_FILES_PATH}/secrets.yaml" > /tmp/secrets.yaml
          fi
        fi

        envsubst < /tmp/secrets.yaml > /tmp/secrets.yaml.tmp && mv /tmp/secrets.yaml.tmp /tmp/secrets.yaml

        kubectl apply -f /tmp/secrets.yaml

        echo
        echo "-> Secrets deployed!"
        echo
      fi


.deploy:quality:secrets:
  extends: .secrets:deploy
  only:
    - master
  environment:
    name: ${ENVIRONMENT_NAME}
    url: https://${DOMAIN}

.deploy:production:secrets:
  extends: .secrets:deploy

  only:
    - /^v.+$/i
  except:
    - branches

  environment:
    name: ${ENVIRONMENT_NAME}
    url: https://${DOMAIN}

.deploy:internal:secrets:
  extends: .secrets:deploy

  only:
    - /^v.+$/i
  except:
    - branches

  environment:
    name: ${ENVIRONMENT_NAME}
    url: https://${DOMAIN}
